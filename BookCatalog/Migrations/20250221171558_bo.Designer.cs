// <auto-generated />
using BookCatalog.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookCatalog.Migrations
{
    [DbContext(typeof(BookDbContext))]
    [Migration("20250221171558_bo")]
    partial class bo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookCatalog.Models.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthorId"));

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            Bio = "Джоан Роулинг е британска писателка, известна с поредицата за \"Хари Потър\". Родена на 31 юли 1965 г. в Йейт, Англия, тя израства с любов към литературата и мечтата да стане писател. Идеята за \"Хари Потър\" ѝ хрумва по време на пътуване с влак през 1990 г. След години на трудности и откази от издатели, първата книга - \"Хари Потър и философският камък\" - е публикувана през 1997 г. и постига огромен успех. Поредицата включва седем книги, преведени на над 80 езика, и се е продала в повече от 500 милиона копия. Освен \"Хари Потър\", Роулинг е автор на криминални романи под псевдонима Робърт Галбрейт, сред които \"Зовът на кукувицата\" и \"Копринената буба\". Тя е носител на множество награди, включително Ордена на Британската империя, и е активен филантроп.",
                            ImagePath = "/images/rowling.jpg",
                            Name = "Дж. К. Роулинг"
                        },
                        new
                        {
                            AuthorId = 2,
                            Bio = "Стивън Кинг е американски писател, известен като \"Кралят на ужаса\". Роден на 21 септември 1947 г. в Портланд, Мейн, Кинг започва да пише от ранна възраст. Първият му голям успех идва с романа \"Кери\" (1974), който е отхвърлен 30 пъти преди да бъде публикуван. Творчеството му включва над 60 романа и 200 разказа, много от които са адаптирани в култови филми и сериали. Сред най-известните му творби са \"Сиянието\", \"То\", \"Мизъри\", \"Зеленият път\", \"Гробище за домашни любимци\" и \"Тъмната кула\". Стилът му съчетава ужаси, психологически трилър и социална критика. Кинг е носител на множество награди, включително Брам Стокър, Световната награда за фентъзи и Националния медал за изкуство, връчен му от президента на САЩ.",
                            ImagePath = "/images/king.jpg",
                            Name = "Стивън Кинг"
                        },
                        new
                        {
                            AuthorId = 3,
                            Bio = "Агата Кристи е британска писателка, известна като \"Кралицата на криминалния жанр\". Родена на 15 септември 1890 г. в Торки, Англия, тя започва да пише детективски романи през 20-те години на XX век. Нейните книги, сред които \"Убийство в Ориент Експрес\", \"Десет малки негърчета\" и \"Смърт край Нил\", са продадени в над 2 милиарда копия, което я прави един от най-продаваните автори в историята. Нейните герои, детектив Еркюл Поаро и госпожица Марпъл, се превръщат в икони на криминалния жанр. Кристи е носител на Ордена на Британската империя и първата жена, която получава титлата \"Дама\" за приноса си към литературата. Освен романи, тя пише пиеси, включително \"Капан за мишки\" - най-дълго играното театрално представление в света.",
                            ImagePath = "/images/christie.jpg",
                            Name = "Агата Кристи"
                        },
                        new
                        {
                            AuthorId = 4,
                            Bio = "Джордж Р. Р. Мартин е американски писател, известен с фентъзи поредицата \"Песен за огън и лед\". Роден на 20 септември 1948 г. в Байон, Ню Джърси, той започва кариерата си като автор на научна фантастика и хорър. Първата книга от \"Песен за огън и лед\", \"Игра на тронове\", излиза през 1996 г. и бързо набира популярност. Историята е вдъхновена от реални исторически събития като Войната на розите. Поредицата включва сложни герои, политически интриги и неочаквани обрати. Успехът ѝ води до създаването на хитовия сериал \"Игра на тронове\" (2011-2019) на HBO. Освен писател, Мартин е сценарист и телевизионен продуцент. Работил е по сериали като \"Зоната на здрача\" и \"Красавицата и звярът\". Той е носител на наградите Хюго, Небюла и Локус, а неговото творчество има огромно влияние върху съвременната фентъзи литература.",
                            ImagePath = "/images/martin.jpg",
                            Name = "Джордж Р. Р. Мартин"
                        });
                });

            modelBuilder.Entity("BookCatalog.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("BookInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("GenreId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            AuthorId = 1,
                            BookInformation = "„Хари Потър и философският камък“ е първата книга от поредицата на Дж. К. Роулинг, която разказва за приключенията на младия магьосник Хари Потър, докато открива своя магически свят и битката си срещу тъмнината.",
                            GenreId = 1,
                            ImagePath = "/images/haripg.jpg",
                            Title = "Хари Потър и философският камък"
                        },
                        new
                        {
                            BookId = 2,
                            AuthorId = 2,
                            BookInformation = "Романът „То“ на Стивън Кинг разказва за група деца, които се борят срещу древно, зловещо същество, което приема формата на клоун и се завръща в родния им град.",
                            GenreId = 6,
                            ImagePath = "/images/itjpg.jpg",
                            Title = "То"
                        },
                        new
                        {
                            BookId = 3,
                            AuthorId = 3,
                            BookInformation = "„Убийството на Роджър Акройд“ на Агата Кристи е класически криминален роман, в който детектив Херкюл Поаро разкрива мистерията около убийството на заможния Роджър Акройд в малко английско селце.",
                            GenreId = 5,
                            ImagePath = "/images/murderroger.jpg",
                            Title = "Убийството на Роджър Акройд"
                        },
                        new
                        {
                            BookId = 4,
                            AuthorId = 4,
                            BookInformation = "„Игра на тронове“ е първата книга от поредицата „Песен за огън и лед“ на Джордж Р. Р. Мартин. Тя представя сложния свят на Вестерос, където благородниците се борят за власт, а магията и драконите се завръщат.",
                            GenreId = 1,
                            ImagePath = "/images/game_of_thrones.jpg",
                            Title = "Игра на тронове"
                        },
                        new
                        {
                            BookId = 5,
                            AuthorId = 1,
                            BookInformation = "Във втората книга от поредицата, Хари Потър се завръща в Хогуортс и открива, че училището е заплашено от мистериозна сила, която затваря Тайната стая.",
                            GenreId = 1,
                            ImagePath = "/images/harry_potter_2.jpg",
                            Title = "Хари Потър и тайната стая"
                        },
                        new
                        {
                            BookId = 6,
                            AuthorId = 2,
                            BookInformation = "„Кери“ на Стивън Кинг разказва историята на тийнейджърка с телепатични способности, която се отмъщава на своите съученици и майка си, когато е подложена на тормоз.",
                            GenreId = 6,
                            ImagePath = "/images/carrie.jpg",
                            Title = "Кери"
                        },
                        new
                        {
                            BookId = 7,
                            AuthorId = 3,
                            BookInformation = "„10 малки индианци“ на Агата Кристи е известен криминален роман, в който десет души, поканени на остров, започват да умират един по един при загадъчни обстоятелства.",
                            GenreId = 7,
                            ImagePath = "/images/ten.jpg",
                            Title = "10 малки негърчета"
                        },
                        new
                        {
                            BookId = 8,
                            AuthorId = 4,
                            BookInformation = "„Сблъсък на крале“ е втората книга от поредицата „Песен за огън и лед“ на Джордж Р. Р. Мартин, в която битката за Железния трон в Вестерос продължава, а нови заплахи се появяват отвън.",
                            GenreId = 2,
                            ImagePath = "/images/clash_of_kings.jpg",
                            Title = "Сблъсък на крале"
                        },
                        new
                        {
                            BookId = 9,
                            AuthorId = 2,
                            BookInformation = "„Зеленият път“ разказва за надзирател в затвор и затворник със свръхестествени способности, който може би е невинен.",
                            GenreId = 3,
                            ImagePath = "/images/zeleno.jpg",
                            Title = "Зеленият път"
                        });
                });

            modelBuilder.Entity("BookCatalog.Models.BookTag", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("BookId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("BookTags");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            TagId = 1
                        },
                        new
                        {
                            BookId = 1,
                            TagId = 4
                        },
                        new
                        {
                            BookId = 2,
                            TagId = 2
                        },
                        new
                        {
                            BookId = 2,
                            TagId = 4
                        },
                        new
                        {
                            BookId = 3,
                            TagId = 1
                        },
                        new
                        {
                            BookId = 3,
                            TagId = 2
                        },
                        new
                        {
                            BookId = 4,
                            TagId = 4
                        },
                        new
                        {
                            BookId = 5,
                            TagId = 1
                        },
                        new
                        {
                            BookId = 5,
                            TagId = 4
                        },
                        new
                        {
                            BookId = 6,
                            TagId = 2
                        },
                        new
                        {
                            BookId = 6,
                            TagId = 4
                        },
                        new
                        {
                            BookId = 7,
                            TagId = 1
                        },
                        new
                        {
                            BookId = 7,
                            TagId = 2
                        },
                        new
                        {
                            BookId = 8,
                            TagId = 4
                        },
                        new
                        {
                            BookId = 9,
                            TagId = 1
                        },
                        new
                        {
                            BookId = 9,
                            TagId = 3
                        });
                });

            modelBuilder.Entity("BookCatalog.Models.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenreId"));

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Info")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenreId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            GenreId = 1,
                            ImagePath = "/images/fantasy.jpg",
                            Info = "Потопете се в магически светове и епични приключения.",
                            Name = "Фентъзи"
                        },
                        new
                        {
                            GenreId = 2,
                            ImagePath = "/images/drama.jpg",
                            Info = "Изживейте интензивни разкази и силни емоции.",
                            Name = "Драма"
                        },
                        new
                        {
                            GenreId = 3,
                            ImagePath = "/images/sci-fi.jpg",
                            Info = "Започнете междузвездни пътешествия и космически приключения.",
                            Name = "Научна фантастика"
                        },
                        new
                        {
                            GenreId = 4,
                            ImagePath = "/images/romance.jpg",
                            Info = "Потопете се в сърдечни истории за любов и страст.",
                            Name = "Романтика"
                        },
                        new
                        {
                            GenreId = 5,
                            ImagePath = "/images/roman.jpg",
                            Info = "Преживейте завладяващи разкази за човешки взаимоотношения и съдби.",
                            Name = "Роман"
                        },
                        new
                        {
                            GenreId = 6,
                            ImagePath = "/images/ujas.jpg",
                            Info = "Потопете се в ужасяващи истории, които ще ви накарат да настръхнете.",
                            Name = "Ужаси"
                        },
                        new
                        {
                            GenreId = 7,
                            ImagePath = "/images/misteriq.jpg",
                            Info = "Разгадайте загадъчни престъпления и неразрешени случаи.",
                            Name = "Мистерия"
                        });
                });

            modelBuilder.Entity("BookCatalog.Models.Tag", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TagId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TagId");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            TagId = 1,
                            Name = "Класика"
                        },
                        new
                        {
                            TagId = 2,
                            Name = "Трилър"
                        },
                        new
                        {
                            TagId = 3,
                            Name = "Любовна история"
                        },
                        new
                        {
                            TagId = 4,
                            Name = "Дистопия"
                        });
                });

            modelBuilder.Entity("BookCatalog.Models.Book", b =>
                {
                    b.HasOne("BookCatalog.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookCatalog.Models.Genre", "Genre")
                        .WithMany("Books")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("BookCatalog.Models.BookTag", b =>
                {
                    b.HasOne("BookCatalog.Models.Book", "Book")
                        .WithMany("BookTags")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookCatalog.Models.Tag", "Tag")
                        .WithMany("BookTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("BookCatalog.Models.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("BookCatalog.Models.Book", b =>
                {
                    b.Navigation("BookTags");
                });

            modelBuilder.Entity("BookCatalog.Models.Genre", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("BookCatalog.Models.Tag", b =>
                {
                    b.Navigation("BookTags");
                });
#pragma warning restore 612, 618
        }
    }
}
